/*
 * camera.c
 *
 *  Created on: Jan 15, 2019
 *      Author: Ilija
 */

#include "iic.h"


int load_regs(struct regval_list *regs) {
	int status, i=0;

	while (1)
	{
		if(regs[i].reg_num == 0xff && regs[i].value == 0xff)
			break;
		status = I2C_write(regs[i].reg_num, regs[i].value);
		if (status != XST_SUCCESS)
			return status;
		i++;
		usleep(1000);
	}

	return status;
}

void take_photo()
{
	u32 InputData;
	UINT bytes_read;
	int i = 0, j = 0, line = 0;

	while (!(XGpio_DiscreteRead(&camera, 1) & 0x400)) {}
	while ((XGpio_DiscreteRead(&camera, 1) & 0x400)) {}

	while (1) {
		InputData = XGpio_DiscreteRead(&camera, 1);
		if ((InputData & 0x400) && j>600000) break;
		if (!(InputData & 0x100) && line){
			line=0;
		}
		if ((InputData & 0x100) && line) continue;
		if ((InputData & 0x200) && (InputData & 0x100)){

			if (i % 2 == 0) {
				camera_read[(j)%921600] = (InputData & 0xf8) ;
				camera_read[(j+1)%921600] = (InputData & 0x07) << 5;
			} else {
				camera_read[(j)%921600] =  (camera_read[(j)%921600] | ((InputData & 0xe0) >> 3));
				camera_read[(j+1)%921600] =((InputData & 0x1f) << 3);
				j++;
			}

			i++;
			j++;
			line=1;
		}
	}

	f_write(&fil, (const void *) camera_read, j, &bytes_read);
	if(i != 2*640*480) printf("Failed!\n");
	else printf("Image taken!\n");

	return;
}

